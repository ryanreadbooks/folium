// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.24.0
// source: api/v1/folium.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FoliumServiceClient is the client API for FoliumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FoliumServiceClient interface {
	Next(ctx context.Context, in *NextRequest, opts ...grpc.CallOption) (*NextResponse, error)
}

type foliumServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFoliumServiceClient(cc grpc.ClientConnInterface) FoliumServiceClient {
	return &foliumServiceClient{cc}
}

func (c *foliumServiceClient) Next(ctx context.Context, in *NextRequest, opts ...grpc.CallOption) (*NextResponse, error) {
	out := new(NextResponse)
	err := c.cc.Invoke(ctx, "/folium.api.folium.FoliumService/Next", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FoliumServiceServer is the server API for FoliumService service.
// All implementations must embed UnimplementedFoliumServiceServer
// for forward compatibility
type FoliumServiceServer interface {
	Next(context.Context, *NextRequest) (*NextResponse, error)
	mustEmbedUnimplementedFoliumServiceServer()
}

// UnimplementedFoliumServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFoliumServiceServer struct {
}

func (UnimplementedFoliumServiceServer) Next(context.Context, *NextRequest) (*NextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Next not implemented")
}
func (UnimplementedFoliumServiceServer) mustEmbedUnimplementedFoliumServiceServer() {}

// UnsafeFoliumServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FoliumServiceServer will
// result in compilation errors.
type UnsafeFoliumServiceServer interface {
	mustEmbedUnimplementedFoliumServiceServer()
}

func RegisterFoliumServiceServer(s grpc.ServiceRegistrar, srv FoliumServiceServer) {
	s.RegisterService(&FoliumService_ServiceDesc, srv)
}

func _FoliumService_Next_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoliumServiceServer).Next(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/folium.api.folium.FoliumService/Next",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoliumServiceServer).Next(ctx, req.(*NextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FoliumService_ServiceDesc is the grpc.ServiceDesc for FoliumService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FoliumService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "folium.api.folium.FoliumService",
	HandlerType: (*FoliumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Next",
			Handler:    _FoliumService_Next_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/folium.proto",
}
